import React from 'react';
import './SpeakingWritingResultPage.css';

const SpeakingWritingResultPage = ({ result, onViewDetailedResult }) => {
    // Determine if this is speaking or writing test
    const isSpeakingTest = () => {
        return result?.testType === 'SPEAKING' ||
            result?.testType?.toUpperCase().includes('SPEAKING');
    };

    // ‚úÖ UPDATED: Check if test has been graded by teacher
    const isGradedByTeacher = () => {
        console.log('=== CHECKING GRADED STATUS ===');
        console.log('gradingStatus:', result?.gradingStatus);
        console.log('overallScore:', result?.overallScore);
        console.log('finalScore:', result?.finalScore);
        console.log('graderId:', result?.graderId);
        console.log('gradedAt:', result?.gradedAt);

        // ‚úÖ Primary check: grading status is completed
        if (result?.gradingStatus === 'COMPLETED') {
            console.log('‚úÖ Graded: Status is COMPLETED');
            return true;
        }

        // ‚úÖ Fallback check: has overall score and grader info
        if (result?.overallScore !== null &&
            result?.overallScore !== undefined &&
            result?.graderId !== null &&
            result?.gradedAt !== null) {
            console.log('‚úÖ Graded: Has overall score + grader info');
            return true;
        }

        // ‚úÖ Alternative fallback: check finalScore (computed field)
        if (result?.finalScore !== null &&
            result?.finalScore !== undefined &&
            result?.finalScore > 0 &&
            result?.graderId !== null) {
            console.log('‚úÖ Graded: Has final score + grader');
            return true;
        }

        console.log('‚ùå Not graded yet');
        return false;
    };

    // Get grading status
    const getGradingStatus = () => {
        if (isGradedByTeacher()) {
            return {
                status: 'completed',
                text: 'ƒê√£ ch·∫•m ƒëi·ªÉm',
                color: '#22c55e',
                icon: '‚úÖ'
            };
        } else {
            return {
                status: 'pending',
                text: 'ƒê·ª£i gi√°o vi√™n ch·∫•m',
                color: '#f59e0b',
                icon: '‚è≥'
            };
        }
    };

    // ‚úÖ UPDATED: Calculate basic stats with proper score handling
    const calculateStats = () => {
        const responses = result?.responses || [];
        const totalQuestions = responses.length;
        const completedResponses = responses.filter(r =>
            r.responseText?.trim() || r.audioResponse?.trim() || r.audioBase64?.trim()
        ).length;

        return {
            totalQuestions,
            completedResponses,
            score: isGradedByTeacher() ? (result.finalScore || result.overallScore || result.totalScore) : null,
            completionRate: totalQuestions > 0 ? Math.round((completedResponses / totalQuestions) * 100) : 0
        };
    };

    const stats = calculateStats();
    const gradingStatus = getGradingStatus();

    return (
        <div className="speaking-writing-result-page">
            {/* Info Alert */}
            <div className="info-alert speaking-writing-info">
                <div className="info-icon">üé§</div>
                <div className="info-text">
                    <strong>B√†i thi {result.testType}:</strong> K·∫øt qu·∫£ ƒë∆∞·ª£c ch·∫•m ƒëi·ªÉm theo ti√™u ch√≠ IELTS b·ªüi gi√°o vi√™n.
                    {!isGradedByTeacher() && ' Vui l√≤ng ch·ªù gi√°o vi√™n ho√†n t·∫•t vi·ªác ch·∫•m ƒëi·ªÉm.'}
                </div>
            </div>

            {/* Header */}
            <h1 className="result-title">
                {isSpeakingTest() ? 'üé§ ' : '‚úçÔ∏è '}
                K·∫øt qu·∫£ {isSpeakingTest() ? 'Speaking' : 'Writing'}: {result.testName || 'IELTS Test'}
            </h1>

            {/* Action Buttons */}
            <div className="action-buttons">
                {isGradedByTeacher() ? (
                    <button
                        className="btn btn-primary"
                        onClick={onViewDetailedResult}
                    >
                        üìä Xem k·∫øt qu·∫£ chi ti·∫øt
                    </button>
                ) : (
                    <button
                        className="btn btn-secondary disabled"
                        disabled
                    >
                        ‚è≥ ƒê·ª£i gi√°o vi√™n ch·∫•m ƒëi·ªÉm
                    </button>
                )}
                <button
                    className="btn btn-secondary"
                    onClick={() => window.location.href = '/online-exam'}
                >
                    üîô Quay v·ªÅ danh s√°ch ƒë·ªÅ thi
                </button>
            </div>

            {/* Summary Section */}
            <div className="result-summary speaking-writing-summary">
                <div className="summary-grid">
                    <div className="summary-meta">
                        <h3>üìã Th√¥ng tin b√†i thi</h3>
                        <p className="test-type-info">
                            Lo·∫°i: {isSpeakingTest() ? 'IELTS Speaking Test' : 'IELTS Writing Test'}
                        </p>
                        <p className="submission-info">
                            N·ªôp b√†i: {result.submittedAt || result.endTime ?
                            new Date(result.submittedAt || result.endTime).toLocaleString('vi-VN') : 'N/A'}
                        </p>
                        {/* ‚úÖ UPDATED: Show grading info if available */}
                        {result.gradedAt && (
                            <p className="grading-info">
                                Ch·∫•m ƒëi·ªÉm: {new Date(result.gradedAt).toLocaleString('vi-VN')}
                            </p>
                        )}
                        {/* ‚úÖ NEW: Show grader info if available */}
                        {result.graderName && (
                            <p className="grader-info">
                                Gi√°o vi√™n: {result.graderName}
                            </p>
                        )}
                    </div>

                    <div className="summary-item">
                        <div className="summary-label">
                            <span className="summary-icon">üìù</span>
                            T·ªïng s·ªë c√¢u
                        </div>
                        <div className="summary-value">{stats.totalQuestions}</div>
                        <div>c√¢u h·ªèi</div>
                    </div>

                    <div className="summary-item">
                        <div className="summary-label">
                            <span className="summary-icon">‚úÖ</span>
                            ƒê√£ ho√†n th√†nh
                        </div>
                        <div className="summary-value">{stats.completedResponses}</div>
                        <div>c√¢u h·ªèi</div>
                    </div>

                    <div className="summary-item">
                        <div className="summary-label">
                            <span className="summary-icon">üìä</span>
                            T·ª∑ l·ªá ho√†n th√†nh
                        </div>
                        <div className="summary-value">{stats.completionRate}%</div>
                        <div>ho√†n th√†nh</div>
                    </div>

                    <div className="summary-item">
                        <div className="summary-label">
                            <span className="summary-icon">üéØ</span>
                            Tr·∫°ng th√°i
                        </div>
                        <div
                            className="summary-value status"
                            style={{ color: gradingStatus.color }}
                        >
                            {gradingStatus.icon} {gradingStatus.text}
                        </div>
                    </div>

                    <div className="summary-item score-item">
                        <div className="summary-label">
                            <span className="summary-icon">üèÜ</span>
                            Band Score
                        </div>
                        <div className="summary-value score">
                            {/* ‚úÖ UPDATED: Safer score display */}
                            {isGradedByTeacher() && stats.score !== null ?
                                Number(stats.score).toFixed(1) :
                                <span style={{ color: gradingStatus.color }}>Pending</span>
                            }
                        </div>
                        <div>{isGradedByTeacher() && stats.score !== null ? '/9.0' : ''}</div>
                    </div>
                </div>
            </div>

            {/* Main Content */}
            <div className="result-tabs">
                <div className="tab-buttons">
                    <button className="tab-button active">
                        üìã Chi ti·∫øt b√†i l√†m
                    </button>
                    {isGradedByTeacher() && (
                        <button
                            className="tab-button"
                            onClick={onViewDetailedResult}
                        >
                            üìä K·∫øt qu·∫£ ch·∫•m ƒëi·ªÉm
                        </button>
                    )}
                </div>

                <div className="tab-content">
                    <div className="speaking-writing-content">
                        {/* Grading Status Section */}
                        <div className="grading-status-section">
                            <h3>üéØ Tr·∫°ng th√°i ch·∫•m ƒëi·ªÉm</h3>
                            <div className={`status-card ${gradingStatus.status}`}>
                                <div className="status-icon" style={{ color: gradingStatus.color }}>
                                    {gradingStatus.icon}
                                </div>
                                <div className="status-info">
                                    <h4 style={{ color: gradingStatus.color }}>
                                        {gradingStatus.text}
                                    </h4>
                                    <p>
                                        {isGradedByTeacher() ? (
                                            <>
                                                B√†i thi c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c gi√°o vi√™n ch·∫•m ƒëi·ªÉm.
                                                Click "Xem k·∫øt qu·∫£ chi ti·∫øt" ƒë·ªÉ xem feedback v√† ƒëi·ªÉm t·ª´ng ti√™u ch√≠.
                                                {/* ‚úÖ NEW: Show overall feedback if available */}
                                                {result.overallFeedback && (
                                                    <div style={{ marginTop: '10px', fontStyle: 'italic', fontSize: '0.9em' }}>
                                                        <strong>Nh·∫≠n x√©t:</strong> {result.overallFeedback}
                                                    </div>
                                                )}
                                            </>
                                        ) : (
                                            <>
                                                B√†i thi c·ªßa b·∫°n ƒëang ƒë∆∞·ª£c gi√°o vi√™n ƒë√°nh gi√° theo {' '}
                                                {isSpeakingTest() ? '4 ti√™u ch√≠ Speaking' : '4 ti√™u ch√≠ Writing'} c·ªßa IELTS.
                                                Th·ªùi gian ch·∫•m ƒëi·ªÉm th∆∞·ªùng t·ª´ 1-3 ng√†y l√†m vi·ªác.
                                            </>
                                        )}
                                    </p>
                                </div>
                            </div>
                        </div>

                        {/* Response Summary */}
                        <div className="responses-summary-section">
                            <h3>üìù T√≥m t·∫Øt b√†i l√†m c·ªßa b·∫°n</h3>
                            <div className="responses-grid">
                                {result.responses && result.responses.map((response, index) => (
                                    <div key={response.id || index} className="response-card">
                                        <div className="response-header">
                                            <span className="response-number">C√¢u {index + 1}</span>
                                            <span className={`response-status ${
                                                response.responseText || response.audioResponse || response.audioBase64
                                                    ? 'completed' : 'incomplete'
                                            }`}>
                                                {response.responseText || response.audioResponse || response.audioBase64
                                                    ? '‚úÖ Ho√†n th√†nh' : '‚ùå Ch∆∞a ho√†n th√†nh'
                                                }
                                            </span>
                                        </div>

                                        <div className="response-content">
                                            {/* Question */}
                                            <div className="question-text">
                                                <strong>C√¢u h·ªèi:</strong> {response.questionText}
                                            </div>

                                            {/* Response Preview */}
                                            <div className="response-preview">
                                                {response.responseText && (
                                                    <div className="text-response-preview">
                                                        <span className="response-label">‚úçÔ∏è B√†i vi·∫øt c·ªßa b·∫°n:</span>
                                                        <div className="response-text">
                                                            {response.responseText.length > 150
                                                                ? response.responseText.substring(0, 150) + '...'
                                                                : response.responseText
                                                            }
                                                        </div>
                                                        <div className="word-count">
                                                            S·ªë t·ª´: {response.responseText.split(/\s+/).filter(w => w.length > 0).length}
                                                        </div>
                                                    </div>
                                                )}

                                                {(response.audioResponse || response.audioBase64) && (
                                                    <div className="audio-response-preview">
                                                        <span className="response-label">üé§ B√†i n√≥i c·ªßa b·∫°n:</span>
                                                        <div className="audio-info">
                                                            <span className="audio-indicator">üîä ƒê√£ ghi √¢m th√†nh c√¥ng</span>
                                                            {response.audioDuration && (
                                                                <span className="audio-duration">
                                                                    Th·ªùi l∆∞·ª£ng: {Math.round(response.audioDuration)}s
                                                                </span>
                                                            )}
                                                        </div>
                                                    </div>
                                                )}
                                            </div>

                                            {/* ‚úÖ UPDATED: Individual Score display (if graded) */}
                                            {isGradedByTeacher() && response.manualScore && (
                                                <div className="individual-score">
                                                    <span className="score-label">ƒêi·ªÉm:</span>
                                                    <span className="score-value">
                                                        {Number(response.manualScore).toFixed(1)}/9.0
                                                    </span>
                                                </div>
                                            )}

                                            {/* ‚úÖ NEW: Individual Feedback (if available) */}
                                            {isGradedByTeacher() && response.feedback && (
                                                <div className="individual-feedback">
                                                    <span className="feedback-label">üí¨ Nh·∫≠n x√©t:</span>
                                                    <div className="feedback-text">
                                                        {response.feedback}
                                                    </div>
                                                </div>
                                            )}
                                        </div>
                                    </div>
                                ))}
                            </div>
                        </div>

                        {/* Criteria Information */}
                        <div className="criteria-info-section">
                            <h3>üéØ Ti√™u ch√≠ ch·∫•m ƒëi·ªÉm IELTS</h3>
                            <div className="criteria-explanation">
                                <p>
                                    B√†i thi {isSpeakingTest() ? 'Speaking' : 'Writing'} c·ªßa b·∫°n s·∫Ω ƒë∆∞·ª£c ƒë√°nh gi√° theo 4 ti√™u ch√≠ ch√≠nh:
                                </p>
                            </div>

                            <div className="criteria-grid">
                                {isSpeakingTest() ? (
                                    <>
                                        <div className="criterion-card">
                                            <div className="criterion-icon">üó£Ô∏è</div>
                                            <div className="criterion-info">
                                                <h4>Fluency and Coherence</h4>
                                                <p>Kh·∫£ nƒÉng n√≥i tr√¥i ch·∫£y, m·∫°ch l·∫°c v√† li√™n k·∫øt √Ω t∆∞·ªüng m·ªôt c√°ch t·ª± nhi√™n</p>
                                            </div>
                                        </div>
                                        <div className="criterion-card">
                                            <div className="criterion-icon">üìö</div>
                                            <div className="criterion-info">
                                                <h4>Lexical Resource</h4>
                                                <p>V·ªën t·ª´ v·ª±ng phong ph√∫, ch√≠nh x√°c v√† s·ª≠ d·ª•ng ph√π h·ª£p v·ªõi ng·ªØ c·∫£nh</p>
                                            </div>
                                        </div>
                                        <div className="criterion-card">
                                            <div className="criterion-icon">üìù</div>
                                            <div className="criterion-info">
                                                <h4>Grammatical Range and Accuracy</h4>
                                                <p>S·ª≠ d·ª•ng ƒëa d·∫°ng c·∫•u tr√∫c ng·ªØ ph√°p v√† ƒë·ªô ch√≠nh x√°c cao</p>
                                            </div>
                                        </div>
                                        <div className="criterion-card">
                                            <div className="criterion-icon">üîä</div>
                                            <div className="criterion-info">
                                                <h4>Pronunciation</h4>
                                                <p>Ph√°t √¢m r√µ r√†ng, tr·ªçng √¢m ch√≠nh x√°c v√† intonation t·ª± nhi√™n</p>
                                            </div>
                                        </div>
                                    </>
                                ) : (
                                    <>
                                        <div className="criterion-card">
                                            <div className="criterion-icon">üéØ</div>
                                            <div className="criterion-info">
                                                <h4>Task Achievement</h4>
                                                <p>Ho√†n th√†nh ƒë·∫ßy ƒë·ªß y√™u c·∫ßu ƒë·ªÅ b√†i v√† tr·∫£ l·ªùi ƒë√∫ng tr·ªçng t√¢m</p>
                                            </div>
                                        </div>
                                        <div className="criterion-card">
                                            <div className="criterion-icon">üîó</div>
                                            <div className="criterion-info">
                                                <h4>Coherence and Cohesion</h4>
                                                <p>T·ªï ch·ª©c √Ω t∆∞·ªüng m·∫°ch l·∫°c v√† s·ª≠ d·ª•ng t·ª´ n·ªëi hi·ªáu qu·∫£</p>
                                            </div>
                                        </div>
                                        <div className="criterion-card">
                                            <div className="criterion-icon">üìö</div>
                                            <div className="criterion-info">
                                                <h4>Lexical Resource</h4>
                                                <p>V·ªën t·ª´ v·ª±ng phong ph√∫, ch√≠nh x√°c v√† ph√π h·ª£p v·ªõi vƒÉn phong h·ªçc thu·∫≠t</p>
                                            </div>
                                        </div>
                                        <div className="criterion-card">
                                            <div className="criterion-icon">üìù</div>
                                            <div className="criterion-info">
                                                <h4>Grammatical Range and Accuracy</h4>
                                                <p>ƒêa d·∫°ng c·∫•u tr√∫c c√¢u v√† s·ª≠ d·ª•ng ng·ªØ ph√°p ch√≠nh x√°c</p>
                                            </div>
                                        </div>
                                    </>
                                )}
                            </div>
                        </div>

                        {/* Next Steps */}
                        <div className="next-steps-section">
                            <h3>üìà B∆∞·ªõc ti·∫øp theo</h3>
                            <div className="next-steps-grid">
                                {!isGradedByTeacher() ? (
                                    <>
                                        <div className="step-card">
                                            <div className="step-icon">‚è≥</div>
                                            <div className="step-content">
                                                <h4>Ch·ªù k·∫øt qu·∫£</h4>
                                                <p>Gi√°o vi√™n ƒëang ch·∫•m b√†i c·ªßa b·∫°n. Th·ªùi gian ch·ªù th∆∞·ªùng 1-3 ng√†y l√†m vi·ªác.</p>
                                            </div>
                                        </div>
                                        <div className="step-card">
                                            <div className="step-icon">üìö</div>
                                            <div className="step-content">
                                                <h4>Ti·∫øp t·ª•c luy·ªán t·∫≠p</h4>
                                                <p>Trong l√∫c ch·ªù, b·∫°n c√≥ th·ªÉ l√†m th√™m c√°c b√†i test kh√°c ƒë·ªÉ c·∫£i thi·ªán k·ªπ nƒÉng.</p>
                                            </div>
                                        </div>
                                        <div className="step-card">
                                            <div className="step-icon">üí°</div>
                                            <div className="step-content">
                                                <h4>H·ªçc t·ª´ v·ª±ng</h4>
                                                <p>S·ª≠ d·ª•ng flashcards ƒë·ªÉ m·ªü r·ªông v·ªën t·ª´ v·ª±ng cho b√†i thi ti·∫øp theo.</p>
                                            </div>
                                        </div>
                                    </>
                                ) : (
                                    <>
                                        <div className="step-card">
                                            <div className="step-icon">üìä</div>
                                            <div className="step-content">
                                                <h4>Xem feedback chi ti·∫øt</h4>
                                                <p>ƒê·ªçc k·ªπ nh·∫≠n x√©t c·ªßa gi√°o vi√™n ƒë·ªÉ hi·ªÉu ƒëi·ªÉm m·∫°nh v√† ƒëi·ªÉm c·∫ßn c·∫£i thi·ªán.</p>
                                            </div>
                                        </div>
                                        <div className="step-card">
                                            <div className="step-icon">üéØ</div>
                                            <div className="step-content">
                                                <h4>Luy·ªán t·∫≠p focused</h4>
                                                <p>T·∫≠p trung v√†o ti√™u ch√≠ c√≥ ƒëi·ªÉm th·∫•p nh·∫•t ƒë·ªÉ c·∫£i thi·ªán.</p>
                                            </div>
                                        </div>
                                        <div className="step-card">
                                            <div className="step-icon">üîÑ</div>
                                            <div className="step-content">
                                                <h4>Th·ª±c h√†nh th√™m</h4>
                                                <p>L√†m th√™m c√°c b√†i test t∆∞∆°ng t·ª± ƒë·ªÉ √°p d·ª•ng feedback.</p>
                                            </div>
                                        </div>
                                    </>
                                )}
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            {/*/!* ‚úÖ DEBUG SECTION - Remove in production *!/*/}
            {/*{process.env.NODE_ENV === 'development' && (*/}
            {/*    <div style={{*/}
            {/*        margin: '20px 0',*/}
            {/*        padding: '10px',*/}
            {/*        backgroundColor: '#f5f5f5',*/}
            {/*        border: '1px solid #ccc',*/}
            {/*        fontSize: '12px',*/}
            {/*        fontFamily: 'monospace'*/}
            {/*    }}>*/}
            {/*        <strong>üêõ Debug Info (Development Only):</strong>*/}
            {/*        <pre>{JSON.stringify({*/}
            {/*            gradingStatus: result?.gradingStatus,*/}
            {/*            overallScore: result?.overallScore,*/}
            {/*            finalScore: result?.finalScore,*/}
            {/*            graderId: result?.graderId,*/}
            {/*            gradedAt: result?.gradedAt,*/}
            {/*            isGraded: isGradedByTeacher()*/}
            {/*        }, null, 2)}</pre>*/}
            {/*    </div>*/}
            {/*)}*/}
        </div>
    );
};

export default SpeakingWritingResultPage;