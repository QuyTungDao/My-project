import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { Play, BookOpen, TrendingUp, Award, Calendar, Star } from 'lucide-react';

// ================================================
// MAIN FLASHCARD HOME COMPONENT
// ================================================
const FlashcardHome = () => {
    const [statistics, setStatistics] = useState(null);
    const [sets, setSets] = useState([]);
    const [loading, setLoading] = useState(true);
    const [setCounts, setSetCounts] = useState([]);

    useEffect(() => {
        fetchData();
    }, []);

    const fetchData = async () => {
        try {
            const token = localStorage.getItem('token');
            const promises = [];

            // Fetch statistics if user is logged in
            if (token && token !== 'undefined' && token !== 'null') {
                promises.push(
                    fetch('http://localhost:8080/api/flashcards/statistics', {
                        headers: { 'Authorization': `Bearer ${token}` }
                    }).then(res => res.ok ? res.json() : null)
                );
            } else {
                promises.push(Promise.resolve(null));
            }

            // Fetch sets
            promises.push(fetch('http://localhost:8080/api/flashcards/sets').then(res => res.json()));

            // Fetch set counts
            promises.push(fetch('http://localhost:8080/api/flashcards/sets/counts').then(res => res.json()));

            const [statsData, setsData, countsData] = await Promise.all(promises);

            setStatistics(statsData);
            setSets(setsData);
            setSetCounts(countsData);
            setLoading(false);
        } catch (error) {
            console.error('Error fetching data:', error);
            setLoading(false);
        }
    };

    if (loading) {
        return (
            <div className="flashcard-container flashcard-loading">
                <div className="loading-spinner"></div>
            </div>
        );
    }

    return (
        <div className="flashcard-container flashcard-home">
            <div className="flashcard-home-container">
                {/* Header */}
                <div className="flashcard-home-header">
                    <h1 className="flashcard-home-title">
                        üìö Flashcards
                    </h1>
                    <p className="flashcard-home-subtitle">
                        H·ªá th·ªëng h·ªçc t·ª´ v·ª±ng th√¥ng minh v·ªõi thu·∫≠t to√°n <strong>Spaced Repetition</strong>,
                        gi√∫p b·∫°n nh·ªõ t·ª´ l√¢u h∆°n v√† h·ªçc hi·ªáu qu·∫£ h∆°n
                    </p>
                </div>

                {/* Statistics Section - Only show if user is logged in */}
                {statistics && (
                    <div className="stats-section">
                        <div className="stats-container">
                            <h2 className="stats-header">
                                <TrendingUp className="w-6 h-6 text-blue-600" />
                                Th·ªëng k√™ c·ªßa b·∫°n
                            </h2>

                            <div className="stats-grid">
                                <div className="stat-card blue">
                                    <div className="stat-number">
                                        {statistics.currentStreak || 0}
                                    </div>
                                    <div className="stat-label">Chu·ªói ng√†y h·ªçc</div>
                                    <div className="stat-sublabel">üî• Streak hi·ªán t·∫°i</div>
                                </div>

                                <div className="stat-card purple">
                                    <div className="stat-number">
                                        {statistics.longestStreak || 0}
                                    </div>
                                    <div className="stat-label">K·ª∑ l·ª•c d√†i nh·∫•t</div>
                                    <div className="stat-sublabel">üèÜ Personal best</div>
                                </div>

                                <div className="stat-card green">
                                    <div className="stat-number">
                                        {statistics.totalLearned || 0}
                                    </div>
                                    <div className="stat-label">T·ªïng t·ª´ ƒë√£ h·ªçc</div>
                                    <div className="stat-sublabel">üìà Vocabulary mastered</div>
                                </div>

                            </div>

                            {/* Quick Actions */}
                            <div className="action-container">
                                <Link
                                    to="/flashcards/study"
                                    className="primary-action-btn"
                                >
                                    <Play className="w-5 h-5" />
                                    üéØ B·∫Øt ƒë·∫ßu h·ªçc h√¥m nay
                                </Link>
                                <p className="action-subtitle">
                                    ‚è∞ H·ªçc t·ªëi ƒëa 20 t·ª´ m·ªõi m·ªói ng√†y ƒë·ªÉ hi·ªáu qu·∫£ t·ªëi ∆∞u
                                </p>
                            </div>

                            {/* Mastery Progress */}
                            {statistics.masteryBreakdown && statistics.masteryBreakdown.length > 0 && (
                                <div className="mastery-section">
                                    <h3 className="mastery-title">
                                        üìä Ph√¢n b·ªë m·ª©c ƒë·ªô th√†nh th·∫°o
                                    </h3>
                                    <div className="mastery-grid">
                                        {statistics.masteryBreakdown.map(([level, count], index) => (
                                            <div key={index} className="mastery-item">
                                                <div className="mastery-count">{count}</div>
                                                <div className="mastery-label">
                                                    {level === 'NEW' ? 'üÜï T·ª´ m·ªõi' :
                                                        level === 'LEARNING' ? 'üìö ƒêang h·ªçc' :
                                                            level === 'REVIEW' ? 'üîÑ √în t·∫≠p' :
                                                                level === 'MASTERED' ? '‚úÖ ƒê√£ thu·ªôc' : level}
                                                </div>
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            )}
                        </div>
                    </div>
                )}

                {/* Sets Section */}
                <div className="sets-section">
                    <div className="sets-header">
                        <h2 className="sets-title">
                            <BookOpen className="w-6 h-6 text-purple-600" />
                            üìë B·ªô th·∫ª t·ª´ v·ª±ng
                        </h2>
                        <Link
                            to="/flashcards/create"
                            className="create-btn"
                        >
                            ‚ûï T·∫°o th·∫ª m·ªõi
                        </Link>
                    </div>

                    <div className="sets-grid">
                        {sets.map((setName, index) => {
                            const setCount = setCounts.find(([name]) => name === setName)?.[1] || 0;

                            return (
                                <div key={index} className="set-card">
                                    <div className="set-card-header">
                                        <div className="set-icon">üìù</div>
                                        <span className="set-count-badge">
                                            {setCount} th·∫ª
                                        </span>
                                    </div>

                                    <h3 className="set-title">
                                        {setName}
                                    </h3>
                                    <p className="set-description">
                                        B·ªô t·ª´ v·ª±ng chuy√™n bi·ªát cho <strong>{setName}</strong>
                                    </p>

                                    <div className="set-actions">
                                        <Link
                                            to={`/flashcards/sets/${setName}`}
                                            className="set-action-btn secondary"
                                        >
                                            üëÄ Xem th·∫ª
                                        </Link>
                                        <Link
                                            to={`/flashcards/study?set=${setName}`}
                                            className="set-action-btn primary"
                                        >
                                            üéØ H·ªçc ngay
                                        </Link>
                                    </div>
                                </div>
                            );
                        })}
                    </div>

                    {sets.length === 0 && (
                        <div className="empty-state">
                            <div className="empty-state-icon">üì≠</div>
                            <h3 className="empty-state-title">
                                Ch∆∞a c√≥ b·ªô th·∫ª n√†o
                            </h3>
                            <p className="empty-state-description">
                                H√£y t·∫°o b·ªô th·∫ª ƒë·∫ßu ti√™n c·ªßa b·∫°n ƒë·ªÉ b·∫Øt ƒë·∫ßu h·ªçc
                            </p>
                            <Link
                                to="/flashcards/create"
                                className="empty-state-btn"
                            >
                                ‚úèÔ∏è T·∫°o flashcard ƒë·∫ßu ti√™n
                            </Link>
                        </div>
                    )}
                </div>

                {/* Features Section */}
                <div className="features-section">
                    <h2 className="features-title">
                        ‚ú® T√≠nh nƒÉng n·ªïi b·∫≠t
                    </h2>

                    <div className="features-grid">
                        <div className="feature-card">
                            <div className="feature-icon">üß†</div>
                            <h3 className="feature-title">Spaced Repetition</h3>
                            <p className="feature-description">
                                Thu·∫≠t to√°n th√¥ng minh gi√∫p b·∫°n √¥n t·∫≠p ƒë√∫ng l√∫c, nh·ªõ l√¢u h∆°n
                            </p>
                        </div>

                        <div className="feature-card">
                            <div className="feature-icon">üîä</div>
                            <h3 className="feature-title">Ph√°t √¢m chu·∫©n</h3>
                            <p className="feature-description">
                                Nghe ph√°t √¢m t·ª´ native speaker, c·∫£i thi·ªán k·ªπ nƒÉng speaking
                            </p>
                        </div>

                        <div className="feature-card">
                            <div className="feature-icon">üìà</div>
                            <h3 className="feature-title">Theo d√µi ti·∫øn ƒë·ªô</h3>
                            <p className="feature-description">
                                Th·ªëng k√™ chi ti·∫øt v·ªÅ qu√° tr√¨nh h·ªçc, ƒë·ªông l·ª±c m·ªói ng√†y
                            </p>
                        </div>

                        <div className="feature-card">
                            <div className="feature-icon">üéØ</div>
                            <h3 className="feature-title">H·ªçc theo m·ª•c ti√™u</h3>
                            <p className="feature-description">
                                B·ªô th·∫ª ƒë∆∞·ª£c thi·∫øt k·∫ø cho IELTS, TOEIC, giao ti·∫øp h√†ng ng√†y
                            </p>
                        </div>
                    </div>
                </div>

                {/* Navigation Section */}
                <div className="navigation-section">
                    <h2 className="navigation-title">
                        üöÄ Kh√°m ph√° th√™m
                    </h2>

                    <div className="navigation-grid">
                        <Link
                            to="/flashcards/sets"
                            className="navigation-card"
                        >
                            <div className="navigation-icon">üìö</div>
                            <h3 className="navigation-card-title">T·∫•t c·∫£ b·ªô th·∫ª</h3>
                            <p className="navigation-card-description">Xem to√†n b·ªô th∆∞ vi·ªán flashcards</p>
                        </Link>

                        {statistics && (
                            <Link
                                to="/flashcards/statistics"
                                className="navigation-card"
                            >
                                <div className="navigation-icon">üìä</div>
                                <h3 className="navigation-card-title">Th·ªëng k√™ chi ti·∫øt</h3>
                                <p className="navigation-card-description">Ph√¢n t√≠ch ti·∫øn ƒë·ªô h·ªçc t·∫≠p c·ªßa b·∫°n</p>
                            </Link>
                        )}

                        <Link
                            to="/flashcards/create"
                            className="navigation-card"
                        >
                            <div className="navigation-icon">‚úèÔ∏è</div>
                            <h3 className="navigation-card-title">T·∫°o flashcard</h3>
                            <p className="navigation-card-description">T·ª± t·∫°o th·∫ª t·ª´ v·ª±ng ri√™ng c·ªßa b·∫°n</p>
                        </Link>
                    </div>
                </div>

                {/* CTA Section for guests */}
                {!statistics && (
                    <div className="cta-section">
                        <h2 className="cta-title">
                            üöÄ B·∫Øt ƒë·∫ßu h√†nh tr√¨nh h·ªçc t·ª´ v·ª±ng
                        </h2>
                        <p className="cta-description">
                            ƒêƒÉng k√Ω ngay ƒë·ªÉ theo d√µi ti·∫øn ƒë·ªô v√† nh·∫≠n g·ª£i √Ω h·ªçc t·∫≠p c√° nh√¢n h√≥a
                        </p>
                        <div className="cta-buttons">
                            <Link
                                to="/register"
                                className="cta-btn primary"
                            >
                                üìù ƒêƒÉng k√Ω mi·ªÖn ph√≠
                            </Link>
                            <Link
                                to="/login"
                                className="cta-btn secondary"
                            >
                                üîë ƒê√£ c√≥ t√†i kho·∫£n
                            </Link>
                        </div>
                    </div>
                )}

                {/* Study Tips Section */}
                <div className="study-tips">
                    <h3 className="study-tips-header">
                        <Award className="w-5 h-5" />
                        üí° M·∫πo h·ªçc hi·ªáu qu·∫£
                    </h3>
                    <div className="study-tips-grid">
                        <div className="study-tip-item">
                            <Calendar className="study-tip-icon" />
                            <span><strong>H·ªçc ƒë·ªÅu ƒë·∫∑n:</strong> 15-20 ph√∫t m·ªói ng√†y hi·ªáu qu·∫£ h∆°n h·ªçc d·ªìn</span>
                        </div>
                        <div className="study-tip-item">
                            <Star className="study-tip-icon" />
                            <span><strong>Trung th·ª±c:</strong> ƒê√°nh gi√° ƒë·ªô kh√≥ th·∫≠t ƒë·ªÉ thu·∫≠t to√°n ho·∫°t ƒë·ªông t·ªët</span>
                        </div>
                        <div className="study-tip-item">
                            <TrendingUp className="study-tip-icon" />
                            <span><strong>Ki√™n tr√¨:</strong> Duy tr√¨ streak ƒë·ªÉ t·∫°o th√≥i quen h·ªçc t·∫≠p b·ªÅn v·ªØng</span>
                        </div>
                        <div className="study-tip-item">
                            <Play className="study-tip-icon" />
                            <span><strong>Th·ª±c h√†nh:</strong> S·ª≠ d·ª•ng t·ª´ m·ªõi trong c√¢u ƒë·ªÉ nh·ªõ l√¢u h∆°n</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default FlashcardHome;