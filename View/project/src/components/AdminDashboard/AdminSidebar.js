// AdminSidebar.js - Updated v·ªõi logout functionality
import React from 'react';
import { useNavigate } from 'react-router-dom'; // ‚úÖ TH√äM: Import useNavigate
import {
    BarChart3,
    BookOpen,
    Users,
    CreditCard,
    Settings,
    LogOut
} from 'lucide-react';
import { logout } from '../../api'; // ‚úÖ TH√äM: Import logout function

export const AdminSidebar = ({ activeTab, setActiveTab }) => {
    const navigate = useNavigate(); // ‚úÖ TH√äM: Initialize navigation

    const navItems = [
        {
            id: 'overview',
            label: 'T·ªïng quan',
            icon: <BarChart3 className="nav-icon" />
        },
        {
            id: 'tests',
            label: 'Qu·∫£n l√Ω b√†i thi',
            icon: <BookOpen className="nav-icon" />
        },
        {
            id: 'users',
            label: 'Qu·∫£n l√Ω ng∆∞·ªùi d√πng',
            icon: <Users className="nav-icon" />
        },
        {
            id: 'flashcards',
            label: 'Qu·∫£n l√Ω Flashcards',
            icon: <CreditCard className="nav-icon" />
        },
        {
            id: 'settings',
            label: 'C√†i ƒë·∫∑t',
            icon: <Settings className="nav-icon" />
        }
    ];

    // ‚úÖ TH√äM: Handle logout function
    const handleLogout = () => {
        try {
            console.log('Logging out from admin dashboard...');

            // ‚úÖ Show confirmation dialog
            const confirmed = window.confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ƒëƒÉng xu·∫•t kh√¥ng?');

            if (confirmed) {
                // ‚úÖ Call logout function from api.js
                logout();

                // ‚úÖ Show success message
                alert('ƒêƒÉng xu·∫•t th√†nh c√¥ng!');

                // ‚úÖ Navigate to login page
                navigate('/login');

                console.log('‚úÖ Logout completed successfully');
            }
        } catch (error) {
            console.error('‚ùå Error during logout:', error);
            alert('C√≥ l·ªói x·∫£y ra khi ƒëƒÉng xu·∫•t. Vui l√≤ng th·ª≠ l·∫°i.');
        }
    };

    return (
        <div className="sidebar">
            <div className="sidebar-header">
                <h1 className="sidebar-title">üéì Admin Dashboard</h1>
            </div>

            <nav className="sidebar-nav">
                <div className="nav-items">
                    {navItems.map((item) => (
                        <button
                            key={item.id}
                            onClick={() => setActiveTab(item.id)}
                            className={`nav-item ${activeTab === item.id ? 'active' : ''}`}
                        >
                            {item.icon}
                            {item.label}
                        </button>
                    ))}
                </div>

                <div className="sidebar-footer">
                    {/* ‚úÖ C·∫¨P NH·∫¨T: Logout button v·ªõi handler */}
                    <button
                        className="logout-btn"
                        onClick={handleLogout}
                        title="ƒêƒÉng xu·∫•t kh·ªèi h·ªá th·ªëng"
                    >
                        <LogOut className="nav-icon" />
                        ƒêƒÉng xu·∫•t
                    </button>
                </div>
            </nav>
        </div>
    );
};